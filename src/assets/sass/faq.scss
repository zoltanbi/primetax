/*-- -------------------------- -->
<---            FAQ             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #faq-1346 {
        padding: var(--sectionPadding);
        position: relative;

        .cs-container {
            width: 100%;
            max-width: calc(1280 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
            position: relative;
            z-index: 1;
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-flex-group {
            width: 100%;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            /* 16px - 20px */
            gap: clamp(1rem, 2.3vw, 1.25rem);
            position: relative;
        }

        .cs-wrapper {
            position: relative;
        }

        .cs-button-group {
            width: 100%;
            display: flex;
            flex-direction: column;
            gap: calc(8 / 16 * 1rem);
            /* prevents flexbox from squishing it */
            flex: none;
        }

        .cs-option {
            /* 16px - 20px */
            font-size: clamp(1rem, 2vw, 1.25rem);
            /* 50px - 72px */
            line-height: clamp(3.125rem, 5vw, 4.5rem);
            font-weight: 700;
            padding: 0;
            /* prevents border from affecting height and width */
            box-sizing: border-box;
            background-color: #fff;
            color: var(--headerColor);
            border: 1px solid #e8e8e8;
            position: relative;
            z-index: 1;
            transition: border-color 0.3s;

            &:before {
                /* background color */
                content: "";
                width: 100%;
                height: 100%;
                background: var(--primary);
                opacity: 0;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                z-index: -1;
                transition: opacity 0.3s;
            }

            &:hover {
                &:hover {
                    border-color: var(--primary);
                    cursor: pointer;
                    &:before {
                        opacity: 0.1;
                    }
                }
            }

            &.cs-active {
                border-color: var(--primary);
                &:before {
                    opacity: 0.1;
                }
            }
        }

        .cs-faq-group {
            width: 100%;
            max-width: calc(847 / 16 * 1rem);
            padding: 0;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: calc(8 / 16 * 1rem);
            transition: transform 0.7s, opacity 0.3s, visibility 0.5s, top 0.3s,
                left 0.3s;
            /* makes the transfrom scaling orgin the top left corner, dictates the direction by which the scale transforms animate towards */
            transform-origin: top;
            transform-style: preserve-3d;
            perspective: 900px;

            &.cs-hidden {
                position: absolute;
                /* by using visibility:hidden instead of display:none, we can see the animations from the opacity and transforms, display:none won't render animations. */
                visibility: hidden;
                /* prevents the mouse from interacting with it */
                pointer-events: none;
                /* hidden galleries have a 0 opacity, and we animate the opacity to 1 when they become active */
                opacity: 0;
                /* this top and left value help control the animation, by setting it to position absolute and left 0, the FAQ won't fly off screen to the left, it will stop its position to be at the left edge of the .cs-flex-group (left: 0). Same for the bottom:0 value, the FAQ won't go past that position when it animates */
                top: 0;
                left: 0;
                position: absolute;
                /* prevents the hidden galleries from overflowing the section, and makes a nice animations to transition to and from */
                transform: scaleY(0);

                .cs-faq-item {
                    transform: rotateX(270deg);
                    opacity: 0;
                }
            }
        }

        .cs-faq-item {
            list-style: none;
            width: 100%;
            border: 1px solid #e8e8e8;
            /* clips all corners of the button that overlap the rounded border */
            overflow: hidden;
            opacity: 1;
            top: 0;
            transform: rotateX(0deg);
            transition: transform 0.6s, opacity 0.3s;

            &:nth-of-type(2) {
                transition-delay: 0.1s;
            }
            &:nth-of-type(3) {
                transition-delay: 0.2s;
            }
            &:nth-of-type(4) {
                transition-delay: 0.3s;
            }
            &:nth-of-type(5) {
                transition-delay: 0.4s;
            }
            &:nth-of-type(6) {
                transition-delay: 0.5s;
            }
            &:nth-of-type(7) {
                transition-delay: 0.6s;
            }
            &:nth-of-type(8) {
                transition-delay: 0.7s;
            }
            &:nth-of-type(9) {
                transition-delay: 0.8s;
            }
            &:nth-of-type(10) {
                transition-delay: 0.9s;
            }

            &.active {
                .cs-button {
                    color: var(--primary);
                    &:before {
                        background-color: var(--primary);
                        transform: rotate(315deg);
                    }
                    &:after {
                        background-color: var(--primary);
                        transform: rotate(-315deg);
                    }
                }
                .cs-item-p {
                    height: auto;
                    /* 20px - 24px bottom */
                    /* 16px - 24px left & right */
                    padding: 0 clamp(1rem, 2vw, 1.5rem)
                        clamp(1.25rem, 1.3vw, 1.5rem);
                    opacity: 1;
                }
            }
        }

        .cs-button {
            /* 16px - 20px */
            font-size: clamp(1rem, 2vw, 1.25rem);
            line-height: 1.2em;
            text-align: left;
            font-weight: bold;
            /* 16px - 24px top & bottom */
            /* 16px - 20px left & right */
            padding: clamp(1rem, 2vw, 1.5rem) clamp(1rem, 2vw, 1.25rem);
            background-color: #fff;
            border: none;
            color: var(--headerColor);
            display: block;
            width: 100%;
            position: relative;
            transition: background-color 0.3s, color 0.3s;

            &:hover {
                cursor: pointer;
            }

            &:before {
                /* left line */
                content: "";
                width: calc(8 / 16 * 1rem);
                height: calc(2 / 16 * 1rem);
                background-color: var(--headerColor);
                opacity: 1;
                border-radius: 50%;
                position: absolute;
                display: block;
                top: 50%;
                right: calc(24 / 16 * 1rem);
                transform: rotate(45deg);
                /* animate the transform from the left side of the x axis, and the center of the y */
                transform-origin: left center;
                transition: transform 0.5s;
            }

            &:after {
                /* right line */
                content: "";
                width: calc(8 / 16 * 1rem);
                height: calc(2 / 16 * 1rem);
                background-color: var(--headerColor);
                opacity: 1;
                border-radius: 50%;
                position: absolute;
                display: block;
                top: 50%;
                right: calc(21 / 16 * 1rem);
                transform: rotate(-45deg);
                /* animate the transform from the right side of the x axis, and the center of the y */
                transform-origin: right center;
                transition: transform 0.5s;
            }
        }

        .cs-button-text {
            width: 80%;
            display: block;
        }

        .cs-item-p {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            width: 90%;
            height: 0;
            margin: 0;
            /* 16px - 24px */
            padding: 0 clamp(1rem, 2vw, 1.5rem);
            opacity: 0;
            color: var(--bodyTextColor);
            /* clips the text so it doesn't show up */
            overflow: hidden;
            transition: opacity 0.3s, padding-bottom 0.3s;
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 48rem) {
    #faq-1346 {
        .cs-container {
            max-width: calc(1280 / 16 * 1rem);
        }

        .cs-flex-group {
            flex-direction: row;
        }

        .cs-button-group {
            width: 31%;
            max-width: calc(413 / 16 * 1rem);
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #faq-1346 {
            .cs-title,
            .cs-item-p,
            .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: 0.8;
            }

            .cs-option {
                border-color: rgba(255, 255, 255, 0.3);
                background-color: transparent;
                color: var(--bodyTextColorWhite);

                &.cs-active,
                &:hover {
                    border-color: var(--secondary);
                }
            }

            .cs-faq-item {
                border-color: rgba(255, 255, 255, 0.3);
                transition: border-color 0.3s, transform 0.6s;
                &.active {
                    .cs-button {
                        background-color: var(--secondary);
                        color: var(--headerColor);
                        &:before,
                        &:after {
                            background-color: var(--headerColor);
                        }
                    }

                    .cs-item-p {
                        /* 20px - 24px */
                        padding-top: clamp(1.25rem, 1.3vw, 1.5rem);
                    }
                }

                &:nth-of-type(2) {
                    transition-delay: 0.1s;
                }
                &:nth-of-type(3) {
                    transition-delay: 0.2s;
                }
                &:nth-of-type(4) {
                    transition-delay: 0.3s;
                }
                &:nth-of-type(5) {
                    transition-delay: 0.4s;
                }
                &:nth-of-type(6) {
                    transition-delay: 0.5s;
                }
                &:nth-of-type(7) {
                    transition-delay: 0.6s;
                }
                &:nth-of-type(8) {
                    transition-delay: 0.7s;
                }
                &:nth-of-type(9) {
                    transition-delay: 0.8s;
                }
                &:nth-of-type(10) {
                    transition-delay: 0.9s;
                }

                &:hover {
                    border-color: var(--secondary);
                    transition: border-color 0.3s;
                }
            }

            .cs-button {
                background-color: var(--dark);
                color: var(--bodyTextColorWhite);
                &:before,
                &:after {
                    background-color: var(--bodyTextColorWhite);
                }
            }
        }
    }
}

/*-- -------------------------- -->
<---          Reviews           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #reviews-727 {
        padding: var(--sectionPadding);
        background-color: #f7f7f7;

        .cs-container {
            width: 100%;
            /* changes to 1280px at tablet */
            max-width: calc(550 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-title {
            max-width: 20ch;
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: calc(20 / 16 * 1rem);
        }

        .cs-item {
            list-style: none;
            width: 100%;
            margin: 0;
            /* 32px - 48px top & bottom */
            /* 16px - 32px left & right */
            padding: clamp(2rem, 7vw, 3rem) clamp(1rem, 4vw, 2rem);
            /* makes padding not affect height and width */
            box-sizing: border-box;
            background-color: #ffffff;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
        }

        .cs-icon {
            /* 30px - 40px */
            width: clamp(1.875rem, 4vw, 2.5rem);
            height: auto;
            margin: 0 0 calc(32 / 16 * 1rem) 0;
            display: block;
        }

        .cs-h3 {
            /* 20px - 25px */
            font-size: clamp(1.25rem, 4vw, 1.5625rem);
            line-height: 1.2em;
            font-weight: 700;
            margin: 0 0 calc(24 / 16 * 1rem) 0;
            color: var(--headerColor);
        }

        .cs-item-text {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 4vw, 1rem);
            line-height: 1.5em;
            margin: 0 0 calc(48 / 16 * 1rem) 0;
            color: var(--bodyTextColor);
        }

        .cs-name {
            font-size: calc(20 / 16 * 1rem);
            line-height: 1.2em;
            font-weight: 500;
            margin: auto 0 0 0;
            color: var(--headerColor);
            display: flex;
            justify-content: flex-start;
            align-items: center;
            gap: calc(8 / 16 * 1rem);
            position: relative;
            &:before {
                content: "";
                width: calc(8 / 16 * 1rem);
                height: 1px;
                background: currentColor;
                display: block;
                position: relative;
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #reviews-727 {
        .cs-container {
            max-width: calc(1280 / 16 * 1rem);
        }

        .cs-card-group {
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: center;
        }

        .cs-item {
            width: 48.5%;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #reviews-727 {
            .cs-topper,
            .cs-title,
            .cs-text,
            .cs-h3,
            .cs-item-text,
            .cs-name {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: 0.8;
            }

            .cs-item {
                background-color: var(--medium);
            }
        }
    }
}
